.keyboard-btn.active {
  color: #000;
  background: rgba(255,255,255,0.3);
}
/* Keyboard panel styles */
.hidden {
  display: none !important;
}

.keyboard-grid {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  flex: 1;
  margin-top: 1rem;
  margin-bottom: 1rem;
}
.keyboard-row {
  display: flex;
  justify-content: center;
  gap: 1rem;
  margin-bottom: 1.2rem;
}
.keyboard-btn {
  width: 3.5rem;
  height: 3.5rem;
  font-size: var(--top-btn-h);
  background: #222;
  color: #fff;
  border: 2px solid #888;
  border-radius: 10px;
  cursor: pointer;
  transition: background 0.2s, border 0.2s;
}
.keyboard-btn:active {
  background: #0a84ff;
  border-color: #0a84ff;
}
/* Keyboard bottom bar: 1/10 screen height, 8 buttons fit, transparent, text color changes */
.keyboard-bottom-bar {
  display: flex;
  justify-content: center;
  align-items: center;
  background: var(--bar-gradient);
  height: calc(var(--vh) * 0.1);
  padding: 0;
  gap: 0.2rem;
}
.keyboard-page-btn {
  background: transparent;
  color: #fff;
  border: none;
  border-radius: 5px;
  padding: 0.4rem 0.5rem;
  font-size: 1rem;
  cursor: pointer;
  margin: 0 0.05rem;
  min-width: 2.5rem;
  transition: color 0.2s, background 0.2s;
}
.keyboard-page-btn.active {
  color: #000;
  background: rgba(255,255,255,0.3);
}

html, body {
  margin: 0;
  padding: 0;
  font-family: sans-serif;
  background: black;
  color: white;
  height: 100%;
  overflow: hidden;
}

.top-bar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: #111;
  padding: 0.4rem;
}

.tab {
  background: #333;
  color: white;
  border: none;
  padding: 0.4rem 1rem;
  margin: 0 0.2rem;
  border-radius: 5px;
  cursor: pointer;
}

.tab.active {
  background: #0a84ff;
}

.page {
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.main-content {
  display: flex;
  flex: 1;
  overflow: hidden;
}

.functions-side {
  width: 50px;
  display: flex;
  flex-direction: column;
  gap: 0.3rem;
  align-items: center;
  padding-top: 0.5rem;
}

.functions-side button {
  background: transparent;
  border: none;
  cursor: pointer;
}

.functions-side img {
  width: 32px;
  height: 32px;
}

.speed-block {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-evenly;
}

.speed-bar-wrapper {
  height: 200px;
  width: 70px;
  position: relative;
}

.speed-bar {
  position: relative;
  width: 100%;
  height: 100%;
  background: #444;
  border-radius: 6px;
  overflow: hidden;
}

.speed-fill {
  position: absolute;
  bottom: 0;
  width: 100%;
  height: 0%;
  background: lime;
}

.slider-vertical {
  position: absolute;
  width: 100%;
  height: 100%;
  opacity: 0;
  transform: scaleY(-1);
  z-index: 2;
}

.speed-display {
  font-size: 1.3rem;
  color: lime;
}

.loco-desc {
  margin: 0.3rem;
  font-weight: 700;
}

.loco-img {
  height: 80px;
}

.direction-buttons {
  display: flex;
  gap: 1.5rem;
}

.dir-btn {
  width: 3rem;
  height: 3rem;
  font-size: 1.5rem
}

.loco-list-wrapper {
  background: #111;
  height: 4.5rem;
  overflow-x: auto;
}

.loco-list {
  display: flex;
  gap: 0.5rem;
  padding: 0.4rem;
}

.loco-list img {
  height: 60px;
  cursor: pointer;
}

#stopBtn.stop {
  background: red;
  color: white;
}

#stopBtn.go {
  background: green;
  color: white;
}

/* --- Mobile viewport height fix --- */
:root {
  /* Will be set via JS to visual viewport height in px; falls back to modern svh/dvh */
  --app-height: 100svh;
  --topbar-h: 0px;
}

/* Ensure flex children can shrink and not overflow vertically */
.main-content { 
  min-height: 0; 
}

/* Use dynamic viewport height instead of 100vh to avoid address bar issues */
.page {
  height: calc(var(--app-height, 100svh) - var(--topbar-h));
  /* In case 100svh isn't supported, browsers can still use 100dvh */
  height: calc(100dvh - var(--topbar-h));
  box-sizing: border-box;
  padding-bottom: env(safe-area-inset-bottom);
}



/* Safe-area top padding for iOS status bar */
.top-bar {
  padding-top: env(safe-area-inset-top);
}


/* === Added by ChatGPT on 2025-08-12 ===
   Oben & unten je ein Balken über volle Breite,
   Höhe: 1/10 der sichtbaren Bildschirmhöhe,
   Hintergrund: Verlauf von rgb(165,165,165) (oben) nach rgb(69,69,69) (unten).
   Die Buttons oben und die Lokliste unten werden vertikal mittig ausgerichtet.
   Nutzt --app-height falls vorhanden; sonst 100svh als Fallback.
*/
:root {
  --vh: var(--app-height, 100svh);
  --bar-gradient: linear-gradient(to bottom, rgb(165, 165, 165), rgb(69, 69, 69));
}

/* OBERER BALKEN (Hintergrund der 4 Buttons) */
.top-bar {
  height: calc(var(--vh) * 0.1);
  background: var(--bar-gradient);
  padding: env(safe-area-inset-top) 0.8rem 0 0.8rem;
  display: flex;
  align-items: center;            /* vertikal mittig */
  justify-content: space-between; /* vorhandenes Layout beibehalten */
}

/* UNTERER BALKEN (Hintergrund der Lokliste) */
.loco-list-wrapper {
  height: calc(var(--vh) * 0.1);
  background: var(--bar-gradient);
  display: flex;
  align-items: center;            /* Elemente in der Liste vertikal mittig */
  overflow-x: auto;               /* horizontales Scrollen beibehalten */
  padding: 0 0.4rem;
}

/* Mittelteil flexibel (nur falls vorhanden) */
.main-content {
  flex: 1;
  min-height: 0;
}
/* === End of ChatGPT block === */


/* === Dynamic sizing (added 2025-08-12) ===
   - Loco list items: 1/2 of bottom bar height => 1/20 of screen height
   - Top 4 buttons: 2/3 of top bar height (bar = 1/10 of screen height)
*/
:root {
  --bar-h: calc(var(--vh) * 0.1);
  --top-btn-h: calc(var(--bar-h) * 0.5);
  --loco-item-h: calc(var(--bar-h) * 0.5);
}

/* Top buttons scale to 2/3 of the bar height, preserving proportions via relative paddings/font-size */
.top-bar .tab,
.top-bar #stopBtn {
  height: var(--top-btn-h);
  min-height: 0;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding-block: calc(var(--top-btn-h) * 0.15);
  padding-inline: clamp(0.5rem, calc(var(--top-btn-h) * 0.40), 2rem);
  font-size: clamp(0.9rem, calc(var(--top-btn-h) * 0.40), 1.6rem);
  line-height: 1;
  border-radius: calc(var(--top-btn-h) * 0.20);
}

/* Loco thumbnails occupy half the bottom bar height (centered by wrapper's align-items) */
.loco-list img {
  height: var(--loco-item-h);
}

/* Feste Breite für Start/Stop basierend auf "STOP" (4 Zeichen) */
:root {
  /* Falls du später "START" o.ä. nutzt, einfach auf 5 erhöhen */
  --stop-label-chars: 4; /* "STOP" = 4 */
}

/* Falls dein Button eine Klasse statt ID hat, ersetze #stopBtn durch .stop */
.top-bar #stopBtn,
.top-bar .stop {
  /* gleiche Paddings/Font-Scaling wie zuvor, Breite bleibt konstant */
  box-sizing: border-box;
  white-space: nowrap;
  width: calc(
    var(--stop-label-chars) * 1ch
    + 2 * clamp(0.5rem, calc(var(--top-btn-h) * 0.40), 2rem)  /* = padding-inline * 2 */
  );
}

/* === Side function buttons sizing (added 2025-08-12) ===
   - Each side button is a square with size = 1/10 of the visible screen height.
   - There are 8 buttons per side; with top & bottom bars at 10vh each, the main area is 80vh.
   - We remove gaps/padding so 8 * 10vh fits exactly without overflow.
*/
:root {
  --func-btn-size: calc(var(--vh) * 0.1);
}

.functions-side {
  width: var(--func-btn-size);
  gap: 0;                 /* ensure total height = 8 * 10vh */
  padding-top: 0;         /* remove extra spacing at the top */
  padding-bottom: 0;      /* just in case there's padding set elsewhere */
  align-items: stretch;   /* buttons take full width */
}

.functions-side button {
  width: var(--func-btn-size);
  height: var(--func-btn-size);
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent;
  border: none;
  padding: 0;             /* keep square box exact */
  box-sizing: border-box;
}

.functions-side img {
  width: 70%;
  height: 70%;
  object-fit: contain;
  pointer-events: none;   /* icon doesn't trap clicks; button does */
}


/* === Slider sizing + unified GO green (added 2025-08-12) === */

/* 1) Define a shared GO green and slider dimensions */
:root {
  --go-green: green;          /* same green as GO button */
  --slider-w: 40vw;           /* 40% of screen width */
  --slider-h: calc(var(--vh) * 0.45); /* 45% of screen height */
}

/* 2) Ensure the GO button uses the same token */
#stopBtn.go {
  background: var(--go-green) !important;
  color: white;
}

/* 3) Slider container: requested size */
.speed-bar-wrapper {
  width: var(--slider-w);
  height: var(--slider-h);
  max-width: 100%;
}

/* 4) Speed bar / fill and readout use the same green */
.speed-fill {
  background: var(--go-green) !important;
}
.speed-display {
  color: var(--go-green) !important;
  font-weight: 700;
}

/* 5) Native input range coloring (modern browsers) */
.slider-vertical {
  accent-color: var(--go-green);
}

/* 6) Broader coverage for older engines */
.slider-vertical::-webkit-slider-thumb { background: var(--go-green); }
.slider-vertical::-moz-range-thumb { background: var(--go-green); }
.slider-vertical::-moz-range-progress { background: var(--go-green); }

#locoImg.loco-img {
  width: var(--slider-w);
  height: var(--bar-h);
  max-width: 100%;
  display: block;
  background: var(--bar-gradient);
  object-fit: contain;
  object-position: center;
  border-radius: 5px;
  overflow: hidden;
}

/* 1) Aktive Tabs schwarz statt blau */
.tab.active {
  background: #000;      /* statt #0a84ff */
  color: #fff;
}